#! /bin/bash

### ------------------------------------------------------------------------
### name:       vnp-multi.sh
### author:     RgregoR, 2020
### date:       december 2020
### last chng:  20200908
###
### ------------------------------------------------------------------------
### Description:
### script that creates directory structure acording to scheme below for
### organising the project:
### 
### c:\osn_dir
###   +-- VN_naziv
###       +-- podloge
###       +-- podatki
###       +-- nacrt
###           +-- naziv_VN_teksti
###           +-- naziv_VN_risbe
###
### It pools the basic input data from an external file "seznam.txt"
### as comma separated list of data: trasa,dn,naziv,faza
### ------------------------------------------------------------------------

# setting static variables
CURR_YEAR=$(date +%Y)
osn_dir="/c/Users/gregor.redelonghi/${CURR_YEAR}/_${CURR_YEAR}_1_PROJEKTI" 

# timestamp
function tms() {
    echo -n "[ $(date +%Y%m%d_%H%M%S) ] "
}

tms; echo "Starting $0 ..."

# starting the for loop:
for FRAZA in $(cat $HOME/majstaf_en/majbin_en/pnp/seznam.pnp); do
	# clear
	echo
	trasa="$(echo ${FRAZA} | awk -F "," '{print $1}')"
	dn="$(echo ${FRAZA} | awk -F "," '{print $2}')"
	naziv="$(echo ${FRAZA} | awk -F "," '{print $3}')"
	faza="VN"

	msclt=${mesec}-${leto}
	celotna_ozn="${faza}_${trasa}_${msclt}_${naziv}"
	delna_ozn="${naziv}_${faza}_${msclt}"

	echo "Celotna ozn=${osn_dir}/${celotna_ozn}"
	echo "Delna ozn  =${delna_ozn}"
	echo	
	read -p "Proceed? Press any key, or ctrl+c to quit!"

	##########################################################################

	### # passing an entry to a log file


	gr_logf=$HOME/majstaf_en/logging_en/projekt.log
	echo "[ $(date +%Y%m%d-%H:%M:%S) ] Starting $0" >> ${gr_logf} ##### start logging_en 
	### 

	### clear

	echo
cat <<"EOF"
##########################################################
# Script that that creates directory structure for       #
# organising the project                                 #
# -----------------------------------------------------  #
# logging in: [$HOME/majstaf_en/logging_en/projekt.log]  #
##########################################################
EOF

	echo

	# Display the scheme of directory structure:
	echo
	echo "Data from external file will create directory structure as follows:"
	printf "%87s\n" | tr " " "-"
	echo "${osn_dir}"
	echo "+-- ${celotna_ozn}"
	echo "    +-- podloge"
	echo "    +-- podatki"
	echo "    +-- nacrt"
	echo "        +-- ${delna_ozn}_risbe"
	echo "        +-- ${delna_ozn}_teksti"
	printf "%87s\n" | tr " " "-"
	echo

	# Test if a directori already exists!
	if [ -e "${osn_dir}/${celotna_ozn}" ]; then
		echo "[ $(date +%Y%m%d-%H:%M:%S) ] Directory [${osn_dir}/${celotna_ozn}] ... EXISTS!" | tee -a ${gr_logf} # append to log
			echo "[ $(date +%Y%m%d-%H:%M:%S) ] ... LEAVING! ..." >> ${gr_logf} # append to log
			echo "[ $(date +%Y%m%d-%H:%M:%S) ] Exiting $0" >> ${gr_logf} #stop logging_en
			echo "[ $(date +%Y%m%d-%H:%M:%S) ]------------------------------------------------------------------------------" >> ${gr_logf}
		echo
		read -p "Press any key to EXIT!"
		
		exit 1

	fi

	read -p "Press any key to continue or ctrl+c to terminate!"

	echo
	printf "%87s\n" | tr " " "-"
	echo "Creating directory structure ... "
	(tms; echo "Creating directory structure:") >> ${gr_logf} # append to log
	(tms; echo "${osn_dir}/${celotna_ozn}") >> ${gr_logf} # append to log
	mkdir -pv ${osn_dir}/${celotna_ozn}/podloge
	mkdir -pv ${osn_dir}/${celotna_ozn}/podatki
	mkdir -pv ${osn_dir}/${celotna_ozn}/nacrt/${delna_ozn}_{risbe,teksti}

	printf "%87s\n" | tr " " "-"
	echo "Displaying the directory structure ..."
	tree ${osn_dir}/${celotna_ozn}
	printf "%87s\n" | tr " " "-"
	(tms; echo "SUCCESS!!") | tee -a ${gr_logf} # append to log
	(tms; echo "Exiting $0") >> ${gr_logf} # stop logging_en
	(tms; echo "--------------------------------------------------------------------------------") >> ${gr_logf}

	### else
	###     echo "[ $(date +%Y%m%d-%H:%M:%S) ] Your answer is NOT \"y\" or \"Y\"." | tee -a ${gr_logf} # append to log
	###     echo "[ $(date +%Y%m%d-%H:%M:%S) ] ... LEAVING! ..." | tee -a ${gr_logf} # append to log
	###         echo "[ $(date +%Y%m%d-%H:%M:%S) ] Exiting $0" >> ${gr_logf} # stop logging_en
	###         echo "[ $(date +%Y%m%d-%H:%M:%S) ]------------------------------------------------------------------------------" >> ${gr_logf}        
	### fi

done

