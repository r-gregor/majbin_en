#! /usr/bin/env bash


# VARS
DRPBX_ODPRTO="/c/Users/gregor.redelonghi/majstaf_en/drpbx-en/ODPRTO"
gr_FROM1="${HOME}/majstaf_en"
gr_TO1="${DRPBX_ODPRTO}/MCDN"
gr_FROM2="/home/gregor.redelonghi/majstaf_en/java"
gr_TO2="${DRPBX_ODPRTO}/home_username_majstaf_java_en"

# novo 20201102
gr_FROM3="/home/gregor.redelonghi/majstaf_en/metsys_en"
gr_TO3="${DRPBX_ODPRTO}/METSYS_skupno/en/metsys_en"

# timestamp
function tms() {
    echo -n "[ $(date +%Y%m%d_%H%M%S) ] "
}

crtn=100
function crtc() {
    for ((i=1; i<=$1; i++)); do
        echo -n "-"
    done
    echo
}

# command
CMD="rsync -rltDv --update --delete"

function mcdn_en() {
	myDir="$1"
	mySrc="${gr_FROM1}/${myDir}"
	myDest="${gr_TO1}/${myDir}"
    tms; echo "syncing ..."
    tms; echo "from: ${mySrc}"
    tms; echo "to:   ${myDest}"
	# read -p "Continue?"
	# ${CMD} ${mySrc}/ ${myDest}/ | while read line; do if [[ $line != "" ]]; then (tms; echo $line); fi; done

	# exluded send_config files
	# ${CMD} --exclude="**/send_config*" ${mySrc}/ ${myDest}/ | grep -v '^[[:space:]]*$' | while read -r line; do echo $line | sed "s/.*/[ $(date +%Y%m%d_%H%M%S) ] rsync: &/"; done

	# removed exluding send_config files: credentials moved to system variable"
	${CMD} ${mySrc}/ ${myDest}/ | grep -v '^[[:space:]]*$' | while read -r line; do echo $line | sed "s/.*/[ $(date +%Y%m%d_%H%M%S) ] rsync: &/"; done
}

# run
function runBackups() {
    # for gr_DIR in majbin_en coding; do
    for gr_DIR in majbin_en; do
		mcdn_en ${gr_DIR}
		# tms; crtc $(($crtn-20))
		tms; crtc 3
    done  
}

# new 20201102
function runNewBackup1() {
    tms; echo "syncing ..."
    tms; echo "from: ${gr_FROM3}"
    tms; echo "to:   ${gr_TO3}"
    ${CMD} ${gr_FROM3}/ ${gr_TO3}/ | grep -v '^[[:space:]]*$' | while read -r line; do echo $line | sed "s/.*/[ $(date +%Y%m%d_%H%M%S) ] rsync: &/"; done
    # tms; crtc $(($crtn-20))
    tms; crtc 3
}

# main
dT1=$(date +"%s")
tms; echo "Started: $0"
# tms; echo "Syncing ..."
# tms; crtc $(($crtn-20))
tms; crtc 3
runBackups
runNewBackup1
dT2=$(date +"%s")
tms; echo "Done in $((dT2-dT1)) seconds!"
# crtc $crtn
crtc 3

